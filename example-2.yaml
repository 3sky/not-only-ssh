AWSTemplateFormatVersion: 2010-09-09

Parameters:
  ImageId:
    Type: AWS::EC2::Image::Id
    Default: "ami-0f845a2bba44d24b2"
    Description: Image AMI for machine. Default AMAZON LINUX2.
  InstanceSize:
    Type: String
    Default: "t2.micro"
    Description: Default machine size for VM

Resources:
  SSHKey:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: my-ssh-key
      KeyType: ed25519
      PublicKeyMaterial: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAC+VpNRYyRPO/0RYc90Y2OeM0ncn1sh2DPHntvoDtKA THS"
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: just-vm

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.10.0/24

  NATGateway:
   Type: AWS::EC2::NatGateway
   Properties:
     AllocationId:
       Fn::GetAtt:
         - EIP
         - AllocationId
     SubnetId:
       Ref: PublicSubnet

  EIP:
    DependsOn:
      - VPC
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc 

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public Routes Table

  InternetRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private Routes Table

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

  BastionSecurityGroupSSH:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "internet-to-bastion"
      GroupDescription: "Allow ssh traffic to Bastion EC2"
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  InstanceSecurityGroupSSH:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "bastion-to-instnace"
      GroupDescription: "Allow ssh traffic to EC2 Instance"
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          SourceSecurityGroupId: !Ref BastionSecurityGroupSSH
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  Bastion:
    Type: "AWS::EC2::Instance"
    Properties:
      Monitoring: false
      SubnetId: !Ref PublicSubnet
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceSize
      KeyName: !Ref SSHKey
      UserData:
        Fn::Base64: 
          !Sub |
            #!/bin/bash
            sudo yum update -y
            sudo amazon-linux-extras install epel -y
            sudo yum -y install fail2ban
            sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local
            sudo sed -i "s/^\[sshd\]/[sshd]\nenabled=true/" /etc/fail2ban/jail.local
            sudo systemctl restart fail2ban
      SecurityGroupIds:
        - Ref: BastionSecurityGroupSSH
      Tags:
        - Key: Owner
          Value: Kuba
        - Key: Name
          Value: MyInstance
        - Key: Arch
          Value: x86

  MyInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      Monitoring: false
      SubnetId: !Ref PrivateSubnet
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceSize
      KeyName: !Ref SSHKey
      UserData:
        Fn::Base64: 
          !Sub |
            #!/bin/bash
            sudo yum update -y
      SecurityGroupIds:
        - Ref: InstanceSecurityGroupSSH
      Tags:
        - Key: Owner
          Value: Kuba
        - Key: Name
          Value: Instance
        - Key: Arch
          Value: x86

Outputs:
  THSBastion:
    Value:
      Fn::GetAtt:
        - Bastion
        - PublicIp
    Description: Bastion's PublicIp Address
  THSInstance:
    Value:
      Fn::GetAtt:
        - MyInstance
        - PrivateIp
    Description: Instance's PrivateIp Address
